{"ast":null,"code":"import React from'react';import{useDrag}from'react-dnd';import{jsx as _jsx}from\"react/jsx-runtime\";const DragImage=_ref=>{let{src}=_ref;const[{isDragging},drag]=useDrag(()=>({type:'image',item:{src},collect:monitor=>({isDragging:monitor.isDragging()})}));return/*#__PURE__*/_jsx(\"img\",{ref:drag,src:src,alt:\"draggable\",style:{opacity:isDragging?0.5:1,cursor:'move',width:'150px',height:'150px',margin:'10px'}});};export default DragImage;","map":{"version":3,"names":["React","useDrag","jsx","_jsx","DragImage","_ref","src","isDragging","drag","type","item","collect","monitor","ref","alt","style","opacity","cursor","width","height","margin"],"sources":["C:/Code/NewGutBioDivCal/NewGutBioDivCal/src/components/DragImage.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nconst DragImage = ({ src }) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: 'image',\r\n    item: { src },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <img\r\n      ref={drag}\r\n      src={src}\r\n      alt=\"draggable\"\r\n      style={{\r\n        opacity: isDragging ? 0.5 : 1,\r\n        cursor: 'move',\r\n        width: '150px',\r\n        height: '150px',\r\n        margin: '10px',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DragImage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAa,IAAZ,CAAEC,GAAI,CAAC,CAAAD,IAAA,CACxB,KAAM,CAAC,CAAEE,UAAW,CAAC,CAAEC,IAAI,CAAC,CAAGP,OAAO,CAAC,KAAO,CAC5CQ,IAAI,CAAE,OAAO,CACbC,IAAI,CAAE,CAAEJ,GAAI,CAAC,CACbK,OAAO,CAAGC,OAAO,GAAM,CACrBL,UAAU,CAAEK,OAAO,CAACL,UAAU,CAAC,CACjC,CAAC,CACH,CAAC,CAAC,CAAC,CAEH,mBACEJ,IAAA,QACEU,GAAG,CAAEL,IAAK,CACVF,GAAG,CAAEA,GAAI,CACTQ,GAAG,CAAC,WAAW,CACfC,KAAK,CAAE,CACLC,OAAO,CAAET,UAAU,CAAG,GAAG,CAAG,CAAC,CAC7BU,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,OAAO,CACfC,MAAM,CAAE,MACV,CAAE,CACH,CAAC,CAEN,CAAC,CAED,cAAe,CAAAhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}