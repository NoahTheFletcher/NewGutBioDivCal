{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\NewGutBioDivCal\\\\NewGutBioDivCal\\\\src\\\\components\\\\DropBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropBox = ({\n  id,\n  label,\n  resetAll\n}) => {\n  _s();\n  const [droppedImages, setDroppedImages] = useState([]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'image',\n    drop: item => addImageToBox(item.src),\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  }));\n  const addImageToBox = src => {\n    setDroppedImages(prev => [...prev, src]);\n  };\n  const clearBox = () => {\n    setDroppedImages([]);\n  };\n\n  // Clear all boxes when the global resetAll state changes\n  useEffect(() => {\n    if (resetAll) {\n      setDroppedImages([]);\n    }\n  }, [resetAll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      height: '250px',\n      width: '150px',\n      margin: '10px',\n      border: '2px dashed gray',\n      backgroundColor: isOver ? 'lightgreen' : 'white',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      overflowY: 'auto',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), droppedImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Drop Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : droppedImages.map((src, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: `dropped-${index}`,\n      style: {\n        width: '90%',\n        margin: '5px 0'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearBox,\n      style: {\n        marginTop: 'auto',\n        backgroundColor: '#dc3545',\n        color: 'white',\n        border: 'none',\n        padding: '5px 10px',\n        cursor: 'pointer',\n        borderRadius: '4px',\n        marginBottom: '5px'\n      },\n      children: \"Clear Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DropBox, \"nSi7vppepDtqe/yHNqLNQtazFds=\", false, function () {\n  return [useDrop];\n});\n_c = DropBox;\nexport default DropBox;\nvar _c;\n$RefreshReg$(_c, \"DropBox\");","map":{"version":3,"names":["React","useState","useEffect","useDrop","jsxDEV","_jsxDEV","DropBox","id","label","resetAll","_s","droppedImages","setDroppedImages","isOver","drop","accept","item","addImageToBox","src","collect","monitor","prev","clearBox","ref","style","height","width","margin","border","backgroundColor","display","flexDirection","alignItems","justifyContent","overflowY","position","children","fileName","_jsxFileName","lineNumber","columnNumber","length","marginTop","map","index","alt","onClick","color","padding","cursor","borderRadius","marginBottom","_c","$RefreshReg$"],"sources":["C:/Code/NewGutBioDivCal/NewGutBioDivCal/src/components/DropBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nconst DropBox = ({ id, label, resetAll }) => {\r\n  const [droppedImages, setDroppedImages] = useState([]);\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'image',\r\n    drop: (item) => addImageToBox(item.src),\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const addImageToBox = (src) => {\r\n    setDroppedImages((prev) => [...prev, src]);\r\n  };\r\n\r\n  const clearBox = () => {\r\n    setDroppedImages([]);\r\n  };\r\n\r\n  // Clear all boxes when the global resetAll state changes\r\n  useEffect(() => {\r\n    if (resetAll) {\r\n      setDroppedImages([]);\r\n    }\r\n  }, [resetAll]);\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      style={{\r\n        height: '250px',\r\n        width: '150px',\r\n        margin: '10px',\r\n        border: '2px dashed gray',\r\n        backgroundColor: isOver ? 'lightgreen' : 'white',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        overflowY: 'auto',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <strong>{label}</strong>\r\n      {droppedImages.length === 0 ? (\r\n        <p style={{ marginTop: '20px' }}>Drop Here</p>\r\n      ) : (\r\n        droppedImages.map((src, index) => (\r\n          <img\r\n            key={index}\r\n            src={src}\r\n            alt={`dropped-${index}`}\r\n            style={{ width: '90%', margin: '5px 0' }}\r\n          />\r\n        ))\r\n      )}\r\n      {/* Individual Clear Button */}\r\n      <button\r\n        onClick={clearBox}\r\n        style={{\r\n          marginTop: 'auto',\r\n          backgroundColor: '#dc3545',\r\n          color: 'white',\r\n          border: 'none',\r\n          padding: '5px 10px',\r\n          cursor: 'pointer',\r\n          borderRadius: '4px',\r\n          marginBottom: '5px',\r\n        }}\r\n      >\r\n        Clear Box\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}